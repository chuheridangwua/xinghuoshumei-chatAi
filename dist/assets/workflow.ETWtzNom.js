import{c as C}from"./index.DRW9BNoj.js";import"./vendor.CamtBdHc.js";import"./index.lMMP7HIl.js";const E=async(n,o={})=>{var F;const{onStart:d,onNodeStart:h,onNodeFinish:p,onFinish:m,onOutput:T,onError:w,onComplete:r,onTTSMessage:_,onTTSMessageEnd:A}=o;try{if(n.signal&&n.signal.aborted){console.log("[Workflow] 请求已中断"),r==null||r(!1,"请求已中断");return}const i=await n;if(!i.ok){const l=await i.text();throw console.error("[Workflow] API请求失败:",i.status,l),new Error(`API请求失败: ${i.status} ${l}`)}console.log("[Workflow] 开始处理流式响应");const x=i.body.getReader(),I=new TextDecoder;let y="",f=null,W=null;try{for(;;){if(n.signal&&n.signal.aborted){console.log("[Workflow] 检测到请求中断信号，停止处理流");break}const{done:l,value:a}=await x.read();if(l){console.log("[Workflow] 流读取完成");break}y+=I.decode(a,{stream:!0});const v=y.split(`

`);y=v.pop()||"";for(const c of v)if(!(!c.trim()||!c.startsWith("data: ")))try{const e=JSON.parse(c.substring(6));e.workflow_run_id&&!f&&(f=e.workflow_run_id),e.task_id&&!W&&(W=e.task_id,o.onTaskIdChange&&o.onTaskIdChange(W)),e.event==="workflow_started"?(console.log("%c[Workflow] 收到工作流开始事件: workflow_started","color: #4CAF50; font-weight: bold;"),d==null||d(e.data)):e.event==="node_started"?(console.log("%c[Workflow] 收到节点开始事件: node_started","color: #4CAF50; font-weight: bold;"),console.log("%c[Workflow Node Started]","color: #2196F3; font-weight: bold;",{title:(F=e.data)==null?void 0:F.title}),h==null||h(e.data)):e.event==="node_finished"?(console.log("%c[Workflow] 收到节点完成事件: node_finished","color: #4CAF50; font-weight: bold;"),p==null||p(e.data)):e.event==="workflow_finished"?(console.log("%c[Workflow] 收到工作流完成事件: workflow_finished","color: #4CAF50; font-weight: bold;"),m==null||m(e.data),e.data&&e.data.outputs&&(T==null||T(e.data.outputs))):e.event==="tts_message"?(console.log("%c[Workflow] 收到TTS事件: tts_message","color: #4CAF50; font-weight: bold;"),_==null||_(e)):e.event==="tts_message_end"?(console.log("%c[Workflow] 收到TTS结束事件: tts_message_end","color: #4CAF50; font-weight: bold;"),A==null||A(e)):e.event==="error"?(console.error("%c[Workflow] 收到错误事件: error","color: #F44336; font-weight: bold;",e),w==null||w(e.message||"工作流处理错误")):e.event==="ping"&&console.log("%c[Workflow] 收到ping事件","color: #607D8B; font-style: italic;")}catch(e){console.error("%c[Workflow] 解析流数据失败:","color: #F44336; font-weight: bold;",e)}}}catch(l){console.error("[Workflow] 流处理过程中出错:",l);const a=l.message||"";if(l.name==="AbortError"||a.includes("aborted")||a.includes("abort")){console.log("[Workflow] 请求被中断"),r==null||r(!1,"请求处理过程已中断");return}throw l}finally{try{x.releaseLock(),console.log("[Workflow] 读取器已释放")}catch(l){console.warn("[Workflow] 释放读取锁时出错:",l)}}console.log("[Workflow] 流处理完成"),r==null||r(!0)}catch(i){console.error("[Workflow] 流式请求错误:",i),i.name==="AbortError"||i.message.includes("aborted")?(console.log("[Workflow] 请求中断错误"),r==null||r(!1,"请求已中断")):(console.error("[Workflow] 请求失败错误"),w==null||w(i.message||"请求失败"),r==null||r(!1,i.message))}},$=async(n,o={},d={})=>{var h,p,m,T,w,r,_,A,F,i,x,I,y;try{const f=d.userId||"default-user",W=d.responseMode||"streaming",l="app-6aRhLAp4zAppCJus5ViMgOsh",a={content:n};console.log("[WorkflowTitle] 开始执行标题生成工作流:",{contentLength:n.length,responseMode:W,userId:f});const v=C("/workflows/run"),c={inputs:a,response_mode:W,user:f};console.log("[WorkflowTitle] 发送工作流请求:",{url:v.toString(),workflowApiKey:l.substring(0,10)+"...",requestBody:c});const e=await fetch(v,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${l}`},body:JSON.stringify(c),signal:d.signal});if(!e.ok){const t=await e.text();throw console.error("[WorkflowTitle] 请求失败:",e.status,t),new Error(`标题生成工作流请求失败: ${e.status} - ${t}`)}if(W==="blocking"){const t=await e.json();console.log("[WorkflowTitle] 收到阻塞模式响应:",t);let s=((p=(h=t.data)==null?void 0:h.outputs)==null?void 0:p.text)||"";return s=k(s),console.log("[WorkflowTitle] 最终生成的标题:",s),s?(m=o.onOutput)==null||m.call(o,{text:s}):(console.warn("[WorkflowTitle] 未从响应中找到有效标题"),(T=o.onError)==null||T.call(o,"未能生成有效标题")),(w=o.onComplete)==null||w.call(o,!0),{success:!0,data:t,title:s}}try{console.log("[WorkflowTitle] 开始处理流式响应");const t={...o,onOutput:s=>{var u;let g=s.text||"";g=k(g),console.log("[WorkflowTitle] 获得过滤后的标题:",g),g&&((u=o.onOutput)==null||u.call(o,{text:g}))},onFinish:s=>{var g;if(o.onFinish&&o.onFinish(s),s&&s.outputs&&s.outputs.text){let u=s.outputs.text;u=k(u),u&&u!==s.outputs.text&&(console.log("[WorkflowTitle] 工作流完成后过滤标题:",u),(g=o.onOutput)==null||g.call(o,{text:u}))}}};return await E(e,t),console.log("[WorkflowTitle] 流式响应处理成功"),{success:!0}}catch(t){return console.error("[WorkflowTitle] 流处理过程中出错:",t),t.name==="AbortError"||(r=t.message)!=null&&r.includes("aborted")?(console.log("[WorkflowTitle] 流处理被中断"),(_=o.onComplete)==null||_.call(o,!1,"请求已中断"),{success:!1,aborted:!0,error:t}):(console.error("[WorkflowTitle] 流处理失败:",t.message||"未知错误"),(A=o.onError)==null||A.call(o,t.message||"标题生成失败"),(F=o.onComplete)==null||F.call(o,!1,t.message),{success:!1,error:t})}}catch(f){return console.error("[WorkflowTitle] 标题生成请求错误:",f),f.name==="AbortError"||(i=f.message)!=null&&i.includes("aborted")?(console.log("[WorkflowTitle] 标题生成请求被中断"),(x=o.onComplete)==null||x.call(o,!1,"请求已中断"),{success:!1,aborted:!0,error:f}):(console.error("[WorkflowTitle] 标题生成请求失败:",f.message||"未知错误"),(I=o.onError)==null||I.call(o,f.message||"请求失败"),(y=o.onComplete)==null||y.call(o,!1,f.message),{success:!1,error:f})}};function k(n){if(!n)return"";const o=/<think>[\s\S]*?<\/think>/;return n=n.replace(o,""),n=n.trim(),console.log("[WorkflowTitle] 过滤后的标题:",n),n}export{$ as generateArticleTitle,E as handleWorkflowStreamResponse};
//# sourceMappingURL=workflow.ETWtzNom.js.map
