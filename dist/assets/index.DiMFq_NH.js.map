{"version":3,"file":"index.DiMFq_NH.js","sources":["../../src/app/dataset/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"dataset-container\">\r\n        <t-card title=\"知识库管理\" class=\"dataset-card\">\r\n            <t-loading :loading=\"loading\">\r\n                <div v-if=\"datasetList.length > 0\" class=\"debug-info\">\r\n                    已加载 {{ datasetList.length }} 条记录\r\n                </div>\r\n                \r\n                <t-table \r\n                    :data=\"datasetList\" \r\n                    :columns=\"columns\" \r\n                    :pagination=\"pagination\" \r\n                    row-key=\"id\"\r\n                    stripe\r\n                    hover\r\n                    @page-change=\"onPaginationChange\"\r\n                    empty=\"暂无数据\"\r\n                >\r\n                    <template #operationCol=\"{ row }\">\r\n                        <t-space>\r\n                            <t-button theme=\"primary\" variant=\"text\" @click=\"viewDatasetDetail(row)\">查看</t-button>\r\n                        </t-space>\r\n                    </template>\r\n                </t-table>\r\n            </t-loading>\r\n        </t-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { MessagePlugin } from 'tdesign-vue-next';\r\nimport { getDatasetList } from '/static/app/api/dataset.js';\r\n\r\nconst router = useRouter();\r\nconst loading = ref(true);\r\nconst datasetList = ref([]);\r\nconst pagination = ref({\r\n    current: 1,\r\n    pageSize: 10,\r\n    total: 0\r\n});\r\n\r\n// 格式化日期\r\nconst formatDate = (timestamp) => {\r\n    if (!timestamp) return '';\r\n    const date = new Date(timestamp * 1000);\r\n    return date.toLocaleString();\r\n};\r\n\r\n// 定义表格列\r\nconst columns = [\r\n    { colKey: 'index', title: '序号', width: '80', cell: (h, { rowIndex }) => (pagination.value.current - 1) * pagination.value.pageSize + rowIndex + 1 },\r\n    { colKey: 'name', title: '知识库名称' },\r\n    { colKey: 'description', title: '描述', cell: (h, { row }) => row?.description || '暂无描述' },\r\n    { colKey: 'document_count', title: '文档数量' },\r\n    { colKey: 'created_at', title: '创建时间', cell: (h, { row }) => formatDate(row?.created_at) },\r\n    { colKey: 'operation', title: '操作', width: '160', fixed: 'right', cell: 'operationCol' }\r\n];\r\n\r\n// 获取知识库列表\r\nconst fetchDatasetList = async () => {\r\n    loading.value = true;\r\n    try {\r\n        const response = await getDatasetList({\r\n            page: pagination.value.current,\r\n            limit: pagination.value.pageSize\r\n        });\r\n        \r\n        // 确保数据是数组\r\n        if (Array.isArray(response.data)) {\r\n            datasetList.value = response.data;\r\n        } else if (response.data) {\r\n            datasetList.value = [response.data];\r\n        } else {\r\n            datasetList.value = [];\r\n        }\r\n        \r\n        pagination.value.total = response.total || 0;\r\n        console.log('获取到知识库列表:', datasetList.value);\r\n    } catch (error) {\r\n        console.error('获取知识库列表失败:', error);\r\n        MessagePlugin.error('获取知识库列表失败');\r\n        datasetList.value = [];\r\n    } finally {\r\n        loading.value = false;\r\n    }\r\n};\r\n\r\n// 查看知识库详情\r\nconst viewDatasetDetail = (dataset) => {\r\n    router.push(`/app/dataset/detail/${dataset.id}`);\r\n};\r\n\r\n// 分页变化\r\nconst onPaginationChange = (pageInfo) => {\r\n    pagination.value.current = pageInfo.current;\r\n    pagination.value.pageSize = pageInfo.pageSize;\r\n    fetchDatasetList();\r\n};\r\n\r\n// 初始化加载\r\nonMounted(() => {\r\n    fetchDatasetList();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '/static/app/styles/variables.scss';\r\n\r\n.dataset-container {\r\n    padding: $comp-paddingTB-l $comp-paddingLR-l;\r\n}\r\n\r\n.dataset-card {\r\n    margin-bottom: $comp-margin-m;\r\n}\r\n\r\n.debug-info {\r\n    margin-bottom: 10px;\r\n    color: #999;\r\n    font-size: 12px;\r\n}\r\n</style>"],"names":["router","useRouter","loading","ref","datasetList","pagination","formatDate","timestamp","columns","h","rowIndex","row","fetchDatasetList","response","getDatasetList","error","MessagePlugin","viewDatasetDetail","dataset","onPaginationChange","pageInfo","onMounted"],"mappings":"qQAmCA,MAAMA,EAASC,EAAU,EACnBC,EAAUC,EAAI,EAAI,EAClBC,EAAcD,EAAI,EAAE,EACpBE,EAAaF,EAAI,CACnB,QAAS,EACT,SAAU,GACV,MAAO,CAAA,CACV,EAGKG,EAAcC,GACXA,EACQ,IAAI,KAAKA,EAAY,GAAI,EAC1B,eAAe,EAFJ,GAMrBC,EAAU,CACZ,CAAE,OAAQ,QAAS,MAAO,KAAM,MAAO,KAAM,KAAM,CAACC,EAAG,CAAE,SAAAC,CAAS,KAAOL,EAAW,MAAM,QAAU,GAAKA,EAAW,MAAM,SAAWK,EAAW,CAAE,EAClJ,CAAE,OAAQ,OAAQ,MAAO,OAAQ,EACjC,CAAE,OAAQ,cAAe,MAAO,KAAM,KAAM,CAACD,EAAG,CAAE,IAAAE,CAAU,KAAAA,GAAA,YAAAA,EAAK,cAAe,MAAO,EACvF,CAAE,OAAQ,iBAAkB,MAAO,MAAO,EAC1C,CAAE,OAAQ,aAAc,MAAO,OAAQ,KAAM,CAACF,EAAG,CAAE,IAAAE,CAAI,IAAML,EAAWK,GAAA,YAAAA,EAAK,UAAU,CAAE,EACzF,CAAE,OAAQ,YAAa,MAAO,KAAM,MAAO,MAAO,MAAO,QAAS,KAAM,cAAe,CAC3F,EAGMC,EAAmB,SAAY,CACjCV,EAAQ,MAAQ,GACZ,GAAA,CACM,MAAAW,EAAW,MAAMC,EAAe,CAClC,KAAMT,EAAW,MAAM,QACvB,MAAOA,EAAW,MAAM,QAAA,CAC3B,EAGG,MAAM,QAAQQ,EAAS,IAAI,EAC3BT,EAAY,MAAQS,EAAS,KACtBA,EAAS,KACJT,EAAA,MAAQ,CAACS,EAAS,IAAI,EAElCT,EAAY,MAAQ,CAAC,EAGdC,EAAA,MAAM,MAAQQ,EAAS,OAAS,EACnC,QAAA,IAAI,YAAaT,EAAY,KAAK,QACrCW,EAAO,CACJ,QAAA,MAAM,aAAcA,CAAK,EACjCC,EAAc,MAAM,WAAW,EAC/BZ,EAAY,MAAQ,CAAC,CAAA,QACvB,CACEF,EAAQ,MAAQ,EAAA,CAExB,EAGMe,EAAqBC,GAAY,CACnClB,EAAO,KAAK,uBAAuBkB,EAAQ,EAAE,EAAE,CACnD,EAGMC,EAAsBC,GAAa,CAC1Bf,EAAA,MAAM,QAAUe,EAAS,QACzBf,EAAA,MAAM,SAAWe,EAAS,SACpBR,EAAA,CACrB,EAGA,OAAAS,EAAU,IAAM,CACKT,EAAA,CAAA,CACpB"}